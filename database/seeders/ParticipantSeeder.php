<?php

namespace Database\Seeders;

use App\Models\Participant;
use App\Models\User;
use Carbon\Carbon;
use Event;
use Illuminate\Database\Console\Seeds\WithoutModelEvents;
use Illuminate\Database\Seeder;

class ParticipantSeeder extends Seeder
{
    /**
     * Run the database seeds.
     */
    public function run(): void
    {
        $events = \App\Models\Event::all();
        $users = User::all();

        if ($events->isEmpty() || $users->isEmpty()) {
            $this->command->error('‚ùå Veuillez d\'abord cr√©er des √©v√©nements et des utilisateurs !');
            return;
        }

        $participantsCount = 0;

        foreach ($events as $event) {
            // Nombre al√©atoire de participants (entre 30% et 100% de la capacit√©)
            $numParticipants = rand(
                (int)($event->max_participants * 0.3), 
                min($event->max_participants, $users->count())
            );

            // S√©lectionner des utilisateurs al√©atoires
            $selectedUsers = $users->random(min($numParticipants, $users->count()));

            foreach ($selectedUsers as $user) {
                // √âviter que l'organisateur soit aussi participant
                if ($user->id === $event->user_id) {
                    continue;
                }

                // Date d'inscription al√©atoire entre la cr√©ation de l'√©v√©nement et maintenant
                $registrationDate = Carbon::create($event->created_at)
                    ->addDays(rand(0, max(1, now()->diffInDays($event->created_at))));

                // D√©terminer le statut en fonction de la date de l'√©v√©nement
                $attendanceStatus = 'registered';
                
                if ($event->isPast()) {
                    // Pour les √©v√©nements pass√©s : soit pr√©sent, soit absent
                    $attendanceStatus = rand(0, 100) < 85 ? 'attended' : 'absent';
                } elseif ($event->isOngoing()) {
                    $attendanceStatus = 'confirmed';
                } else {
                    // Pour les √©v√©nements futurs : registered ou confirmed
                    $attendanceStatus = rand(0, 100) < 70 ? 'confirmed' : 'registered';
                }

                // G√©n√©rer feedback et rating pour les participants pr√©sents
                $feedback = null;
                $rating = null;

                if ($attendanceStatus === 'attended' && rand(0, 100) < 60) {
                    $feedbacks = [
                        "Excellent √©v√©nement ! J'ai beaucoup appris et l'ambiance √©tait super.",
                        "Tr√®s instructif, les animateurs √©taient comp√©tents et disponibles.",
                        "Bonne organisation, je recommande vivement !",
                        "Exp√©rience enrichissante, j'ai h√¢te de participer au prochain.",
                        "Parfait pour d√©couvrir de nouvelles techniques de recyclage.",
                        "√âquipe accueillante et professionnelle, merci !",
                        "Tr√®s pratique et concret, exactement ce qu'il me fallait.",
                        "Belle initiative pour l'environnement, continuez !",
                        "J'ai rencontr√© des gens formidables partageant les m√™mes valeurs.",
                        "Atelier bien structur√© avec de bonnes explications.",
                    ];

                    $feedback = $feedbacks[array_rand($feedbacks)];
                    $rating = rand(3, 5); // Note entre 3 et 5 √©toiles
                }

                Participant::create([
                    'event_id' => $event->id,
                    'user_id' => $user->id,
                    'registration_date' => $registrationDate,
                    'attendance_status' => $attendanceStatus,
                    'feedback' => $feedback,
                    'rating' => $rating,
                    'email_sent' => true,
                ]);

                $participantsCount++;
            }
        }

        $this->command->info('‚úÖ ' . $participantsCount . ' inscriptions cr√©√©es avec succ√®s !');
        
        // Afficher quelques statistiques
        $this->command->info('');
        $this->command->info('üìä Statistiques :');
        $this->command->info('   - Confirm√©s : ' . Participant::confirmed()->count());
        $this->command->info('   - Pr√©sents : ' . Participant::attended()->count());
        $this->command->info('   - Absents : ' . Participant::absent()->count());
        $this->command->info('   - Avec feedback : ' . Participant::withFeedback()->count());
    }
}
